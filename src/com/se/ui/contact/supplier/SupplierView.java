package com.se.ui.contact.supplier;

import com.se.database.entities.Employee;
import com.se.database.entities.Supplier;
import com.se.database.sql.SupplierSQL;
import com.se.ui.dashboard.DashboardView;
import static com.se.ui.dashboard.DashboardView.DesktopPane;
import java.awt.Component;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author RDA
 */
public class SupplierView extends javax.swing.JInternalFrame {

    /**
     * Creates new form Supplier
     */
    public SupplierView() {
        initComponents();
    }
    private DefaultTableModel dtm;
    private List<Supplier> list;
    private Employee aEmp;
    //private String aRole;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SupplierDetailsView = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSup = new javax.swing.JTable();
        btnNew = new javax.swing.JButton();
        pnlFilters = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblNic = new javax.swing.JLabel();
        txtNic = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();

        setClosable(true);
        setTitle("Supplier List");

        SupplierDetailsView.setToolTipText("");

        tblSup.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblSup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier ID", "Name", "Company", "E-mail", "Teliphone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSup.getTableHeader().setReorderingAllowed(false);
        tblSup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSupMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblSup);
        if (tblSup.getColumnModel().getColumnCount() > 0) {
            tblSup.getColumnModel().getColumn(0).setMinWidth(0);
            tblSup.getColumnModel().getColumn(0).setPreferredWidth(90);
            tblSup.getColumnModel().getColumn(0).setMaxWidth(90);
        }

        btnNew.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        pnlFilters.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 120, 212), 1, true), "Filters", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 120, 212))); // NOI18N

        lblId.setText("ID :");

        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdKeyReleased(evt);
            }
        });

        lblNic.setText("NIC :");

        txtNic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNicKeyReleased(evt);
            }
        });

        btnClear.setText("Clear All");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFiltersLayout = new javax.swing.GroupLayout(pnlFilters);
        pnlFilters.setLayout(pnlFiltersLayout);
        pnlFiltersLayout.setHorizontalGroup(
            pnlFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFiltersLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblId)
                .addGap(18, 18, 18)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(lblNic)
                .addGap(18, 18, 18)
                .addComponent(txtNic, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        pnlFiltersLayout.setVerticalGroup(
            pnlFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFiltersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNic)
                    .addComponent(txtNic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SupplierDetailsViewLayout = new javax.swing.GroupLayout(SupplierDetailsView);
        SupplierDetailsView.setLayout(SupplierDetailsViewLayout);
        SupplierDetailsViewLayout.setHorizontalGroup(
            SupplierDetailsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SupplierDetailsViewLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(SupplierDetailsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlFilters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );
        SupplierDetailsViewLayout.setVerticalGroup(
            SupplierDetailsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SupplierDetailsViewLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(pnlFilters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnNew)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SupplierDetailsView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SupplierDetailsView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        this.dispose();
        NewSupplierView view = new NewSupplierView();
        DashboardView.DesktopPane.remove((Component) view);
        DashboardView.DesktopPane.add((Component) view);
        view.initializeView(aEmp);
        view.setLocation((int) ((DesktopPane.getSize().width - view.getSize().width) / 2), (int) ((DesktopPane.getSize().height - view.getSize().height) / 2));
        view.setVisible(true);
    }//GEN-LAST:event_btnNewActionPerformed

    private void tblSupMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupMouseReleased
        if (evt.getClickCount() == 2) {
            SupplierDetailsView view = new SupplierDetailsView();
            DashboardView.DesktopPane.remove((Component) view);
            DashboardView.DesktopPane.add((Component) view);
//            int id = 0;
//            String title = null;
//            String name = null;
//            String company = null;
//            String nic = null;
//            String email = null;
//            String phone = null;
            Supplier temp = null;
            for (Supplier sup : list) {
                if (Integer.parseInt(tblSup.getValueAt(tblSup.getSelectedRow(), 0).toString()) == sup.getSup_id()) {
                    temp = sup;
//                    id = sup.getSup_id();
//                    title = sup.getTitle();
//                    name = sup.getName();
//                    company = sup.getCompany();
//                    nic = sup.getNic();
//                    email = sup.getEmail();
//                    phone = sup.getphone();
                }
            }
            view.initializeView(aEmp, temp);
            //view.initializeView(aRole, id, title, name, company, nic, email, phone);
            view.setLocation((int) ((DesktopPane.getSize().width - view.getSize().width) / 2), (int) ((DesktopPane.getSize().height - view.getSize().height) / 2));
            this.dispose();
            view.setVisible(true);
        }
    }//GEN-LAST:event_tblSupMouseReleased

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtId.setText("");
        txtNic.setText("");
        setDtmSupplier();
        list.forEach((sup) -> {
            dtm.addRow(new Object[]{sup.getSup_id(), sup.getTitle() + " " + sup.getName(), sup.getCompany(), sup.getEmail(), sup.getphone()});
        });
        //this.initializeView(aRole);
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyReleased
        String id = txtId.getText();
        String nic = txtNic.getText();
        searchAction(id, nic);
    }//GEN-LAST:event_txtIdKeyReleased

    private void txtNicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNicKeyReleased
        String id = txtId.getText();
        String nic = txtNic.getText();
        searchAction(id, nic);
    }//GEN-LAST:event_txtNicKeyReleased

    private void setDtmSupplier() {
        dtm = (DefaultTableModel) tblSup.getModel();
        dtm.getDataVector().removeAllElements();
        dtm.fireTableDataChanged();
    }

    public void initializeView(Employee aEmp) {
        this.aEmp = aEmp;
        //this.aRole = aEmp.getRole();
        if (aEmp.getRole().equals("Admin")) {
            btnNew.setVisible(true);
        } else {
            btnNew.setVisible(false);
        }
        txtId.setText("");
        txtNic.setText("");

        setDtmSupplier();
        list = SupplierSQL.getAllSuppliers();
        list.forEach((sup) -> {
            dtm.addRow(new Object[]{sup.getSup_id(), sup.getTitle() + " " + sup.getName(), sup.getCompany(), sup.getEmail(), sup.getphone()});
        });
    }

    private void searchAction(String id, String nic) {
        if (id.equals("") && nic.equals("")) {
            txtId.setText("");
            txtNic.setText("");
            setDtmSupplier();
            list.forEach((sup) -> {
                dtm.addRow(new Object[]{sup.getSup_id(), sup.getTitle() + " " + sup.getName(), sup.getCompany(), sup.getEmail(), sup.getphone()});
            });
//            this.initializeView(aRole);
        } else if (id.equals("") && !nic.equals("")) {
            setDtmSupplier();
            list.forEach((sup) -> {
                if (sup.getNic().toLowerCase().startsWith(nic.toLowerCase(Locale.ITALY))) {
                    dtm.addRow(new Object[]{sup.getSup_id(), sup.getTitle() + " " + sup.getName(), sup.getCompany(), sup.getEmail(), sup.getphone()});
                }
            });
        } else if (!id.equals("") && nic.equals("")) {
            setDtmSupplier();
            list.forEach((sup) -> {
                if (sup.getSup_id() == Integer.parseInt(id)) {
                    dtm.addRow(new Object[]{sup.getSup_id(), sup.getTitle() + " " + sup.getName(), sup.getCompany(), sup.getEmail(), sup.getphone()});
                }
            });
        } else if (!id.equals("") && !nic.equals("")) {
            setDtmSupplier();
            list.forEach((sup) -> {
                if (sup.getSup_id() == Integer.parseInt(id) && sup.getNic().toLowerCase().startsWith(nic.toLowerCase(Locale.ITALY))) {
                    dtm.addRow(new Object[]{sup.getSup_id(), sup.getTitle() + " " + sup.getName(), sup.getCompany(), sup.getEmail(), sup.getphone()});
                }
            });
        }
        if (tblSup.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No suppliers found");
            txtId.setText("");
            txtNic.setText("");
            setDtmSupplier();
            list.forEach((sup) -> {
                dtm.addRow(new Object[]{sup.getSup_id(), sup.getTitle() + " " + sup.getName(), sup.getCompany(), sup.getEmail(), sup.getphone()});
            });
//            this.initializeView(aRole);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SupplierDetailsView;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnNew;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNic;
    private javax.swing.JPanel pnlFilters;
    private javax.swing.JTable tblSup;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNic;
    // End of variables declaration//GEN-END:variables
}
